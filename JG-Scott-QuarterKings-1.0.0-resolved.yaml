---
swagger: "2.0"
info:
  description: QuarterKings is an API which allows game developers to easily implement arcade type leaderboards without the hassle of making their own database.
  version: 1
  title: QuarterKings API
  contact:
    email: pocketPrince@quarterKings.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: sean-green-cst.com
basePath: /quarterKings/v1
tags:
- name: admin complete
  description: Completed admin endpoints
- name: developers complete
  description: Completed developer endpoints
- name: planned
  description: Planned operations available to regular developers
schemes:
- https
paths:
  /signup:
    post:
      tags:
      - admin
      summary: Create new User entry and login
      description: Creates a user in the users table of the database
      parameters: 
      - name: name
        in: body
        description: user name to be created
        type: string
      - name: password
        in: body
        description: user password to be created
        type: string
      responses:
        "201":
          description: account created
        "400":
          description: invalid input, object invalid
        "403":
          description: request forbidden by origin header
        "409":
          description: an existing item already exists
  /login:
    post:
      tags:
      - admin
      summary: Confirm user exists in system
      description: Checks the user name and password against the database entry
      parameters: 
      - name: name
        in: body
        description: user name to be queried
        type: string
      - name: password
        in: body
        description: user password to be queried
        type: string
      responses:
        "200":
          description: credentials confirmed
        "400":
          description: invalid object sent to server
        "401":
          description: invalid username or password
        "403":
          description: request forbidden by origin header
        "500":
          description: error description returned with status
  /generate:
    post:
      tags:
      - admin
      summary: generates and returns a new API key for the user
      description: Generates a random 16 character string for the user to use as an API key to store scores in our database.
      parameters: 
      - name: name
        in: body
        description: user name to be confirmed
        type: string
      - name: password
        in: body
        description: user password to be confirmed
        type: string
      - name: domain
        in: body
        type: string
        description: host url of app that will use this api-key
      responses:
        "201":
          description: returns a json object with the newly created api key
        "400":
          description: invalid object sent to server
        "401":
          description: invalid username or password
        "403":
          description: request forbidden by origin header
  /getKeys:
    post:
      tags:
      - admin
      summary: get a list of keys connected to the provided user
      description: Returns a list of keys connected to the provided user
      parameters:
      - name: name
        in: body
        description: username or email of account
        required: true
        type: string
      - name: password
        in: body
        description: password attached to account name
        required: true
        type: string
      responses:
        "200":
          - name: results
            type: array
            description: every array item has apiKey and domain field
            properties:
              - name: apiKey
                type: string
              - name: domain
                type: string
        "400":
          description: invalid input/object
        "401":
          description: invalid username or password
        "403":
          description: request forbidden by origin header
  /score:
    post:
      tags:
      - developer
      summary: Create new entry in score table
      description: Insert a score into the database attached to the API key provided
      parameters: 
      - name: name
        in: body
        description: player name
        required: true
        type: string
      - name: score
        in: body
        description: player score
        required: true
        type: float
      - name: apiKey
        in: body
        description: apiKey to store the score under
        required: true
        type: string
      responses:
        "201":
          description: Success
        "400":
          description: Invalid object
        "401":
          description: apiKey invalid
  /stats:
    post:
      tags:
        - admin
      summary: Get the stats on how many times each endpoint has been hit semi successfully
      description: takes a special admin name and password and returns the hits of each endpoint in the api as an array
      parameters: 
      - name: name
        in: body
        description: admin account name
        required: true
        type: string
      - name: password
        in: body
        description: password attached to account name
        required: true
        type: string
      responses:
        "200":
        - name: results
          type: array
          description: every array item has apiKey and domain field
          properties:
            - name: url
              type: string
            - name: hits
              type: int
        "400":
          description: Invalid object
        "401":
          description: apiKey invalid
        "403":
          description: forbidden
  /getScores:
    get:
      tags:
      - developer
      summary: Get a list of scores connected to the provided api key
      description: Returns a list of scores based on the api key attached to query
      parameters:
      - name: api
        in: query
        description: The API key connected to the scores you wish to access
        required: true
        type: string
      responses:
        "200":
          - name: results
            type: array
            description: every array item has apiKey and domain field
            properties:
              - name: scoreID
                type: int
              - name: scoreDate
                type: string
              - name: playerName
                type: string
              - name: apiKey
                type: string
              - name: score
                type: float
        "400":
          description: no api key provided
        "500":
          description: internal server error
  /deleteAll:
    delete:
      tags:
      - developer
      summary: Delete all scores associated with an apiKey
      description: TODO FILL THIS IN
      parameters: 
      - name: apiKey
        in: body
        description: The API key connected to the scores you wish to delete
        required: true
        type: string
      responses:
        "200":
          description: Success
        "400":
          description: Invalid Object
  /deleteScore:
    delete:
      tags:
      - planned
      summary: Delete a single entry from the score table
      description: TODO FILL THIS IN
      parameters: []
      responses:
        "200":
          description: OK
  /updateDomain:
    put:
      tags:
      - planned
      summary: Update the domain name at the given api key
      description: TODO FILL THIS IN
      parameters: []
      responses:
        "200":
          description: OK
  /updateEmail:
    put:
      tags:
      - planned
      summary: Update the users login email
      description: TODO FILL THIS IN
      parameters: []
      responses:
        "200":
          description: OK
  /inventory:
    get:
      tags:
      - planned
      summary: searches inventory
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      operationId: searchInventory
      produces:
      - application/json
      parameters:
      - name: searchString
        in: query
        description: pass an optional search string for looking up inventory
        required: false
        type: string
      - name: skip
        in: query
        description: number of records to skip for pagination
        required: false
        type: integer
        minimum: 0
        format: int32
      - name: limit
        in: query
        description: maximum number of records to return
        required: false
        type: integer
        maximum: 50
        minimum: 0
        format: int32
      responses:
        "200":
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/InventoryItem'
        "400":
          description: bad input parameter
    post:
      tags:
      - admins
      summary: adds an inventory item
      description: Adds an item to the system
      operationId: addInventory
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: inventoryItem
        description: Inventory item to add
        required: false
        schema:
          $ref: '#/definitions/InventoryItem'
      responses:
        "201":
          description: item created
        "400":
          description: invalid input, object invalid
        "409":
          description: an existing item already exists
definitions:
  InventoryItem:
    type: object
    required:
    - id
    - manufacturer
    - name
    - releaseDate
    properties:
      id:
        type: string
        format: uuid
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
      name:
        type: string
        example: Widget Adapter
      releaseDate:
        type: string
        format: date-time
        example: 2016-08-29T09:12:33.001+0000
      manufacturer:
        $ref: '#/definitions/Manufacturer'
  Manufacturer:
    required:
    - name
    properties:
      name:
        type: string
        example: ACME Corporation
      homePage:
        type: string
        format: url
        example: https://www.acme-corp.com
      phone:
        type: string
        example: 408-867-5309
